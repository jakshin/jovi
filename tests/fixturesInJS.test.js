const testWithFixture = require("./fixtureUtils/testWithFixture")

describe("addition", () => {
  test("add.rock converted to JS", () => testWithFixture("addition/add.rock", "JS"))
  test("addBooleanLiteral.rock converted to JS", () => testWithFixture("addition/addBooleanLiteral.rock", "JS"))
  test("addBooleanVariable.rock converted to JS", () => testWithFixture("addition/addBooleanVariable.rock", "JS"))
  test("addMysteriousLiteral.rock converted to JS", () => testWithFixture("addition/addMysteriousLiteral.rock", "JS"))
  test("addMysteriousVariable.rock converted to JS", () => testWithFixture("addition/addMysteriousVariable.rock", "JS"))
  test("addToBooleanLiteral.rock converted to JS", () => testWithFixture("addition/addToBooleanLiteral.rock", "JS"))
  test("addToBooleanVariable.rock converted to JS", () => testWithFixture("addition/addToBooleanVariable.rock", "JS"))
  test("addToMysteriousLiteral.rock converted to JS", () => testWithFixture("addition/addToMysteriousLiteral.rock", "JS"))
  test("addToMysteriousVariable.rock converted to JS", () => testWithFixture("addition/addToMysteriousVariable.rock", "JS"))
})

describe("decrement", () => {
  test("decrement.rock converted to JS", () => testWithFixture("decrement/decrement.rock", "JS"))
  test("decrementBooleanLiteral.rock converted to JS", () => testWithFixture("decrement/decrementBooleanLiteral.rock", "JS"))
  test("decrementFloatLiteral.rock converted to JS", () => testWithFixture("decrement/decrementFloatLiteral.rock", "JS"))
  test("decrementIntegerLiteral.rock converted to JS", () => testWithFixture("decrement/decrementIntegerLiteral.rock", "JS"))
  test("decrementMysteriousLiteral.rock converted to JS", () => testWithFixture("decrement/decrementMysteriousLiteral.rock", "JS"))
  test("decrementMysteriousVariable.rock converted to JS", () => testWithFixture("decrement/decrementMysteriousVariable.rock", "JS"))
  test("decrementNullLiteral.rock converted to JS", () => testWithFixture("decrement/decrementNullLiteral.rock", "JS"))
  test("decrementStringLiteral.rock converted to JS", () => testWithFixture("decrement/decrementStringLiteral.rock", "JS"))
  test("decrementStringVariable.rock converted to JS", () => testWithFixture("decrement/decrementStringVariable.rock", "JS"))
})

describe("division", () => {
  test("divide.rock converted to JS", () => testWithFixture("division/divide.rock", "JS"))
  test("divideBooleanLiteral.rock converted to JS", () => testWithFixture("division/divideBooleanLiteral.rock", "JS"))
  test("divideBooleanVariable.rock converted to JS", () => testWithFixture("division/divideBooleanVariable.rock", "JS"))
  test("divideByBooleanLiteral.rock converted to JS", () => testWithFixture("division/divideByBooleanLiteral.rock", "JS"))
  test("divideByBooleanVariable.rock converted to JS", () => testWithFixture("division/divideByBooleanVariable.rock", "JS"))
  test("divideByMysteriousLiteral.rock converted to JS", () => testWithFixture("division/divideByMysteriousLiteral.rock", "JS"))
  test("divideByMysteriousVariable.rock converted to JS", () => testWithFixture("division/divideByMysteriousVariable.rock", "JS"))
  test("divideByStringLiteral.rock converted to JS", () => testWithFixture("division/divideByStringLiteral.rock", "JS"))
  test("divideByStringVariable.rock converted to JS", () => testWithFixture("division/divideByStringVariable.rock", "JS"))
  test("divideByZero.rock converted to JS", () => testWithFixture("division/divideByZero.rock", "JS"))
  test("divideMysteriousLiteral.rock converted to JS", () => testWithFixture("division/divideMysteriousLiteral.rock", "JS"))
  test("divideMysteriousVariable.rock converted to JS", () => testWithFixture("division/divideMysteriousVariable.rock", "JS"))
  test("divideStringLiteral.rock converted to JS", () => testWithFixture("division/divideStringLiteral.rock", "JS"))
  test("divideStringVariable.rock converted to JS", () => testWithFixture("division/divideStringVariable.rock", "JS"))
})

describe("increment", () => {
  test("increment.rock converted to JS", () => testWithFixture("increment/increment.rock", "JS"))
  test("incrementBooleanLiteral.rock converted to JS", () => testWithFixture("increment/incrementBooleanLiteral.rock", "JS"))
  test("incrementFloatLiteral.rock converted to JS", () => testWithFixture("increment/incrementFloatLiteral.rock", "JS"))
  test("incrementIntegerLiteral.rock converted to JS", () => testWithFixture("increment/incrementIntegerLiteral.rock", "JS"))
  test("incrementMysteriousLiteral.rock converted to JS", () => testWithFixture("increment/incrementMysteriousLiteral.rock", "JS"))
  test("incrementMysteriousVariable.rock converted to JS", () => testWithFixture("increment/incrementMysteriousVariable.rock", "JS"))
  test("incrementNullLiteral.rock converted to JS", () => testWithFixture("increment/incrementNullLiteral.rock", "JS"))
  test("incrementStringLiteral.rock converted to JS", () => testWithFixture("increment/incrementStringLiteral.rock", "JS"))
  test("incrementStringVariable.rock converted to JS", () => testWithFixture("increment/incrementStringVariable.rock", "JS"))
})

describe("multiplication", () => {
  test("multiply.rock converted to JS", () => testWithFixture("multiplication/multiply.rock", "JS"))
  test("multiplyBooleanLiteral.rock converted to JS", () => testWithFixture("multiplication/multiplyBooleanLiteral.rock", "JS"))
  test("multiplyBooleanVariable.rock converted to JS", () => testWithFixture("multiplication/multiplyBooleanVariable.rock", "JS"))
  test("multiplyByBooleanLiteral.rock converted to JS", () => testWithFixture("multiplication/multiplyByBooleanLiteral.rock", "JS"))
  test("multiplyByBooleanVariable.rock converted to JS", () => testWithFixture("multiplication/multiplyByBooleanVariable.rock", "JS"))
  test("multiplyByMysteriousLiteral.rock converted to JS", () => testWithFixture("multiplication/multiplyByMysteriousLiteral.rock", "JS"))
  test("multiplyByMysteriousVariable.rock converted to JS", () => testWithFixture("multiplication/multiplyByMysteriousVariable.rock", "JS"))
  test("multiplyMysteriousLiteral.rock converted to JS", () => testWithFixture("multiplication/multiplyMysteriousLiteral.rock", "JS"))
  test("multiplyMysteriousVariable.rock converted to JS", () => testWithFixture("multiplication/multiplyMysteriousVariable.rock", "JS"))
  test("multiplyStringByNegative.rock converted to JS", () => testWithFixture("multiplication/multiplyStringByNegative.rock", "JS"))
})

describe("simple", () => {
  test("hello.rock converted to JS", () => testWithFixture("simple/hello.rock", "JS"))
  test("sayInput.rock converted to JS", () => testWithFixture("simple/sayInput.rock", "JS"))
})

describe("subtraction", () => {
  test("subtract.rock converted to JS", () => testWithFixture("subtraction/subtract.rock", "JS"))
  test("subtractBooleanLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractBooleanLiteral.rock", "JS"))
  test("subtractBooleanVariable.rock converted to JS", () => testWithFixture("subtraction/subtractBooleanVariable.rock", "JS"))
  test("subtractFromBooleanLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractFromBooleanLiteral.rock", "JS"))
  test("subtractFromBooleanVariable.rock converted to JS", () => testWithFixture("subtraction/subtractFromBooleanVariable.rock", "JS"))
  test("subtractFromMysteriousLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractFromMysteriousLiteral.rock", "JS"))
  test("subtractFromMysteriousVariable.rock converted to JS", () => testWithFixture("subtraction/subtractFromMysteriousVariable.rock", "JS"))
  test("subtractFromStringLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractFromStringLiteral.rock", "JS"))
  test("subtractFromStringVariable.rock converted to JS", () => testWithFixture("subtraction/subtractFromStringVariable.rock", "JS"))
  test("subtractMysteriousLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractMysteriousLiteral.rock", "JS"))
  test("subtractMysteriousVariable.rock converted to JS", () => testWithFixture("subtraction/subtractMysteriousVariable.rock", "JS"))
  test("subtractStringLiteral.rock converted to JS", () => testWithFixture("subtraction/subtractStringLiteral.rock", "JS"))
  test("subtractStringVariable.rock converted to JS", () => testWithFixture("subtraction/subtractStringVariable.rock", "JS"))
})
